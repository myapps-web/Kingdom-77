# Discord Translation Bot - CI/CD Pipeline
# Automated testing and code quality checks

name: Bot CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Test Bot
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-asyncio
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: 🔍 Lint with flake8
      run: |
        # Stop build on syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=venv,.venv,__pycache__,discord-bot
        # Treat all errors as warnings
        flake8 . --count --exit-zero --max-complexity=15 --max-line-length=127 --statistics --exclude=venv,.venv,__pycache__,discord-bot
        
    - name: ✅ Run tests
      run: |
        if [ -d "tests" ]; then pytest tests/ -v; else echo "No tests directory found"; fi
        
    - name: 📊 Check code structure
      run: |
        python tests/check_cogs.py
        
  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pylint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: 🔎 Run pylint
      continue-on-error: true
      run: |
        pylint main.py --disable=C,R --errors-only || true
        
    - name: 📏 Check file sizes
      run: |
        echo "Checking main.py size..."
        wc -l main.py
        if [ $(wc -l < main.py) -gt 3000 ]; then 
          echo "⚠️ Warning: main.py has more than 3000 lines. Consider modularization."
        fi
